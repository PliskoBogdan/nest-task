[{"E:\\nest-task\\frontend\\src\\index.js":"1","E:\\nest-task\\frontend\\src\\App.js":"2","E:\\nest-task\\frontend\\src\\reportWebVitals.js":"3","E:\\nest-task\\frontend\\src\\components\\Navbar.js":"4","E:\\nest-task\\frontend\\src\\components\\screens\\SignIn.js":"5","E:\\nest-task\\frontend\\src\\components\\screens\\Profile.js":"6","E:\\nest-task\\frontend\\src\\components\\screens\\SignUp.js":"7","E:\\nest-task\\frontend\\src\\components\\screens\\CreatePost.js":"8","E:\\nest-task\\frontend\\src\\reducers\\userReducer.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1414,"mtime":1606913258727,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1428,"mtime":1606845870421,"results":"14","hashOfConfig":"11"},{"size":2688,"mtime":1606918287928,"results":"15","hashOfConfig":"11"},{"size":5969,"mtime":1606915078767,"results":"16","hashOfConfig":"11"},{"size":3486,"mtime":1606918287180,"results":"17","hashOfConfig":"11"},{"size":2408,"mtime":1606913010953,"results":"18","hashOfConfig":"11"},{"size":243,"mtime":1606913085003,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"154s214",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\nest-task\\frontend\\src\\index.js",[],["41","42"],"E:\\nest-task\\frontend\\src\\App.js",["43","44"],"import React, { useEffect, createContext, useReducer, useContext } from 'react'\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\n\nimport './App.css';\nimport NavBar from './components/Navbar'\nimport SignIn from './components/screens/SignIn';\nimport SignUp from './components/screens/SignUp';\nimport Profile from './components/screens/Profile';\nimport CreatePost from './components/screens/CreatePost';\nimport { reducer, initialState } from './reducers/userReducer';\n\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n\n  const { state, dispatch } = useContext(UserContext)\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if (user) {\n      dispatch({ type: \"USER\", payload: user })\n      history.push('/profile')\n    } else {\n      history.push('/signin')\n    }\n  }, [])\n\n  return (\n    <Switch>\n      <Route path='/profile'><Profile /></Route>\n      <Route path='/createpost'><CreatePost /></Route>\n      <Route path='/signup'><SignUp /></Route>\n      <Route path='/signin'><SignIn /></Route>\n    </Switch>\n  )\n\n}\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n\n  );\n}\n\nexport default App;\n","E:\\nest-task\\frontend\\src\\reportWebVitals.js",[],"E:\\nest-task\\frontend\\src\\components\\Navbar.js",[],"E:\\nest-task\\frontend\\src\\components\\screens\\SignIn.js",["45"],"E:\\nest-task\\frontend\\src\\components\\screens\\Profile.js",["46"],"import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const userId = JSON.parse(localStorage.getItem(\"user\"))\r\n    const userFirstName = JSON.parse(localStorage.getItem(\"first_name\"))\r\n    const userLastName = JSON.parse(localStorage.getItem(\"last_name\"))\r\n    const userName = localStorage.getItem(\"username\")\r\n\r\n    const [data, setData] = useState([]);\r\n    let [titleVal, setTitleVal] = useState(\"\");\r\n    let [contentVal, setContentVal] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`http://localhost:5000/post/myposts/${userId}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setData(data)\r\n            })\r\n    }, [])\r\n\r\n    const deltePost = (postid) => {\r\n\r\n        fetch(`http://localhost:5000/post/delete/${postid}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(data => data.json())\r\n            .then(response => {\r\n                M.toast({ html: response.message, classes: \"#43a047 green darken-1\" })\r\n                window.location.reload();\r\n            })\r\n    }\r\n    const updatePost = (postid, content, title) => {\r\n\r\n        if (titleVal.length === 0) {\r\n            titleVal = title\r\n        } else if (contentVal.length === 0) {\r\n            contentVal = content\r\n        }\r\n\r\n        fetch(`http://localhost:5000/post/update/${postid}`, {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                title: titleVal,\r\n                content: contentVal\r\n            })\r\n        })\r\n            .then(data => data.json())\r\n            .then(response => {\r\n\r\n                M.toast({ html: response.message, classes: \"#43a047 green darken-1\" })\r\n                window.location.reload();\r\n            })\r\n    }\r\n\r\n    const editBlockFunc = (id) => {\r\n\r\n        const editBlock = document.querySelectorAll('.gallery__change__block')\r\n        let currentItem = editBlock[id]\r\n\r\n        editBlock.forEach(item => {\r\n            if (item.classList.contains('show-block')) {\r\n                item.classList.remove('show-block')\r\n            } else {\r\n                currentItem.classList.add('show-block')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\", backgroundColor: \"#ee6e73\", margin: \"5px 0\" }}></div>\r\n                <div className=\"post__creator__block\">\r\n                    <h4>{userFirstName} &nbsp;</h4>\r\n                    <h4>{userLastName}</h4>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"post__gallery\">\r\n                {\r\n                    data.map((item, i) => {\r\n                        return (\r\n\r\n                            <div className=\"post__gallery__item\">\r\n                                <h1 className=\"post__gallery__item-title\">{item.title}</h1>\r\n                                <div className=\"post__gallery__header\">\r\n                                    <i className=\"material-icons deletePost\" onClick={() => deltePost(item._id)}>delete</i>\r\n                                    <i className=\"material-icons editPost\" onClick={(e) => { editBlockFunc(i) }}>create</i>\r\n                                </div>\r\n                                <p className=\"post__gallery__item-content\">{item.content}</p>\r\n                                <span className=\"post__gallery__item-author\">Posted: {userName}</span>\r\n                                <div className=\"gallery__change__block hide-block\">\r\n                                    <input\r\n                                        className=\"change__gallery__item\" type=\"text\"\r\n                                        placeholder={item.title}\r\n                                        value={titleVal}\r\n                                        onChange={(e) => { setTitleVal(e.target.value) }}\r\n                                    />\r\n                                    <input\r\n                                        className=\"change__gallery__item\"\r\n                                        type=\"text\"\r\n                                        placeholder={item.content}\r\n                                        value={contentVal}\r\n                                        onChange={(e) => { setContentVal(e.target.value) }} />\r\n                                    <button\r\n                                        className=\"btn waves-effect waves-light #ef5350 red lighten-1 \"\r\n                                        onClick={() => { updatePost(item._id, item.content, item.title) }}\r\n                                    >\r\n                                        EditPost\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn waves-effect waves-light #ef5350 red lighten-1\"\r\n                                        onClick={() => { editBlockFunc(i) }}\r\n                                    >\r\n                                        Close\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","E:\\nest-task\\frontend\\src\\components\\screens\\SignUp.js",[],"E:\\nest-task\\frontend\\src\\components\\screens\\CreatePost.js",[],"E:\\nest-task\\frontend\\src\\reducers\\userReducer.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":18,"column":11,"nodeType":"53","messageId":"54","endLine":18,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":28,"column":6,"nodeType":"57","endLine":28,"endColumn":8,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"52","line":8,"column":13,"nodeType":"53","messageId":"54","endLine":8,"endColumn":18},{"ruleId":"55","severity":1,"message":"59","line":28,"column":8,"nodeType":"57","endLine":28,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [dispatch, history]",{"range":"69","text":"70"},"Update the dependencies array to be: [userId]",{"range":"71","text":"72"},[877,879],"[dispatch, history]",[867,869],"[userId]"]